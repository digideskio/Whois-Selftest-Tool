#!/usr/bin/perl -w
use strict;
use warnings;
use 5.014;

use Getopt::Long qw( :config bundling );
use PDT::TS::Whois::Lexer;
use PDT::TS::Whois::Validator qw( validate );
use PDT::TS::Whois::Grammar qw( $grammar );
use PDT::TS::Whois::Types;

my %rules = (
    d => 'Domain Name Object query',
    r => 'Registrar Object query',
    n => 'Name Server Object query',
);

my $opt_header;
my $opt_type;
GetOptions(
        "header|h" => \$opt_header,
        "type|t=s" => \$opt_type,
        );
if (!defined $opt_type || !exists $rules{$opt_type}) {
    die "error: must specify --type " . join('|', keys %rules);
}

my $rule = $rules{$opt_type};
my $text = do { local $/; <STDIN> };

my $lexer = Net::Whois::Spec::Lexer->new($text);

if ($opt_header) {
    my ($token, $token_value) = $lexer->peek_line();
    while ($token eq 'non-empty line' && $token_value =~ /^#/) {
        $lexer->next_line();
        ($token, $token_value) = $lexer->peek_line();
    }
}

my $types = Net::Whois::Spec::Types->new;

for my $error (validate(rule => $rule, lexer => $lexer, grammar => $grammar, types => $types)) {
    say $error;
}
